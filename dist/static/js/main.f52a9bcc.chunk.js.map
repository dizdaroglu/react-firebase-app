{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","components/config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedInLinks","state","firebase","console","log","links","uid","layout_SignedInLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authotLastName","createdAt","calendar","toUpperCase","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","_Component","_getPrototypeOf2","_this","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","email","password","handleChange","e","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","inherits","createClass","authError","onSubmit","onChange","htmlFor","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","devToolsExtension","f","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f52a9bcc.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { signOut } from '../../store/actions/authAction';\r\n\r\nconst SignedInLinks = (props) => {\r\n\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating grey darken-3 lighten-1\">\r\n                {props.profile.initials}\r\n            </NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","\r\nexport const signIn = (credentials) => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({ type: \"LOGIN_SUCCESS\" });\r\n        }).catch((err) => {\r\n            dispatch({ type: \"LOGIN_ERROR\", err });\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return (dispatch, getState, { getFirebase }) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({ type: 'SIGNUP_SUCCESS' })\r\n        }).catch(err => {\r\n            dispatch({ type: 'SIGNUP_ERROR', err })\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst SignedInLinks = () => {\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">Signup</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default SignedInLinks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n    const { auth, profile } = props;\r\n    console.log(props);\r\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper  teal lighten-2\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"brand-logo\">Plan</Link>\r\n                    {links}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications = (props) => {\r\n    const { notifications } = props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"notifications\">\r\n                        {notifications && notifications.map(item => {\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span> {item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport 'moment/locale/tr';\r\n\r\n\r\nconst ProjectSummary = ({ project }) => {\r\n    return (\r\n\r\n        <div className=\"card  project-summary\">\r\n            <div className=\"card-content grey-text text-darken-3\">\r\n                <span className=\"card-title\">{project.title}</span>\r\n                <p>Posted by the {project.authorFirstName} {project.authotLastName}</p>\r\n                <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar().toUpperCase()}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProjectSummary;","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ProjectList = ({ projects }) => {\r\n    return (\r\n        <div className=\"project-list section\">\r\n            {projects && projects.map(project => {\r\n                return (\r\n                    <Link to={'/project/' + project.id} key={project.id} >\r\n                        <ProjectSummary project={project} />\r\n                    </Link>\r\n                )\r\n            })}\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default ProjectList;","import React, { Component } from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n        const { projects, auth, notifications } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to='/signin' />\r\n\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"dasboard: \", state);\r\n    return {\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\r\n        { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\r\n    ])\r\n)(Dashboard)","\r\nimport React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'\r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport 'moment/locale/tr';\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    console.log(\"details: \", props)\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />\r\n    if (project) {\r\n        return (\r\n            <div className=\"container section project-details\">\r\n                <div className=\"card z-depth-0\">\r\n                    <div className=\"card-content\">\r\n                        <span className=\"card-title\">{project.title}</span>\r\n                        <p>{project.content}</p>\r\n                    </div>\r\n                    <div className=\"card-action gret lighten-4 grey-text\">\r\n                        <div>Posted by {project.authorFirstName} {project.authotLastName}</div>\r\n                        <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading project...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.projects;\r\n    const project = projects ? projects[id] : null;\r\n\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n\r\n}\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'projects' }\r\n    ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../store/actions/authAction';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nexport class SignIn extends Component {\r\n    state = {\r\n        email: '',\r\n        password: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signIn(this.state);\r\n    }\r\n    render() {\r\n        const { authError, auth } = this.props;\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">email</i>\r\n                        <input id=\"email\" type=\"text\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"icon_prefix\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">create</i>\r\n                        <input id=\"password\" type=\"password\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"icon_prefix\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey darken-3 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signIn: (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { signUp } from '../../store/actions/authAction';\r\n\r\n\r\nexport class SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.signUp(this.state);\r\n    }\r\n    render() {\r\n        const { auth, authError } = this.props;\r\n        if (auth.uid) return <Redirect to=\"/\" />\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">email</i>\r\n                        <input id=\"email\" type=\"text\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"icon_prefix\">Email</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">create</i>\r\n                        <input id=\"password\" type=\"password\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"icon_prefix\">Password</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">person</i>\r\n                        <input id=\"firstName\" type=\"text\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"icon_prefix\">First Name</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <i className=\"material-icons prefix\">person</i>\r\n                        <input id=\"lastName\" type=\"text\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"icon_prefix\">Last Name</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey darken-3 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { createProject } from '../../store/actions/projectActions';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        content: ''\r\n    }\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log(this.state);\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    render() {\r\n        const { auth } = this.props;\r\n\r\n        if (!auth.uid) return <Redirect to=\"/signin\" />\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input id=\"title\" type=\"text\" onChange={this.handleChange} className=\"validate\" />\r\n                        <label htmlFor=\"title\">Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Content</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn grey darken-3 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);\r\n","\r\nexport const createProject = (project) => {\r\n\r\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n        //make async call to database\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid;\r\n\r\n\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authotLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() => {\r\n            dispatch({ type: 'CREATE_PROJECT', project });\r\n        }).catch((err) => {\r\n            dispatch({ type: 'CREATE_PROJECT_ERR', err });\r\n        })\r\n    }\r\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN_ERROR':\r\n            return {\r\n                ...state,\r\n                authError: 'Login Failed'\r\n            }\r\n        case 'LOGIN_SUCCESS':\r\n            console.log(\"login success\");\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            };\r\n        case 'SIGNOUT_SUCCESS':\r\n            console.log(\"signout success\");\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            console.log(\"signup success\");\r\n\r\n            return {\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR':\r\n            console.log('signup error');\r\n            return {\r\n                ...state,\r\n                authError: action.err.message\r\n            }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\nexport default authReducer;","/* eslint-disable default-case */\r\nconst initState = {\r\n    projects: [\r\n        { id: 1, title: \"title deneme1\", content: \"ddeneme content1\" },\r\n        { id: 2, title: \"title deneme2\", content: \"ddeneme content2\" },\r\n        { id: 3, title: \"title deneme3\", content: \"ddeneme content3\" },\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_PROJECT':\r\n            console.log('created project', action.project);\r\n            return state;\r\n        case 'CREATE_PROJECT_ERR':\r\n            console.log('created project error', action.err);\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default projectReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n});\r\n\r\nexport default rootReducer;","import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD5KOa92EVcKhR6s6dYGhPEqvq2OfJE94c\",\r\n    authDomain: \"net-plan-f62f2.firebaseapp.com\",\r\n    databaseURL: \"https://net-plan-f62f2.firebaseio.com\",\r\n    projectId: \"net-plan-f62f2\",\r\n    storageBucket: \"net-plan-f62f2.appspot.com\",\r\n    messagingSenderId: \"474757872892\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\n\r\nexport default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './components/config/fbConfig';\n\n\nconst store = createStore(rootReducer,\n\n    compose(applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true }),\n        window.devToolsExtension ? window.devToolsExtension() : f => f\n    ));\n\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(\n        <Provider store={store}>\n\n            <App />\n\n        </Provider>\n        , document.getElementById('root'));\n\n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n\n});\n\n"],"sourceRoot":""}